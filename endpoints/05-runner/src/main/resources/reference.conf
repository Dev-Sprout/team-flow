http-server {
  port = 8000
  logger = {
    http-header = false
    http-header = ${?HTTP_HEADER_LOG}
    http-body = false
    http-body = ${?HTTP_BODY_LOG}
  }
}

database {
  host = "127.0.0.1"
  host = ${?POSTGRES_HOST}
  port = 5432
  port = ${?POSTGRES_PORT}
  user = "teamflow"
  user = ${?POSTGRES_USER}
  password = "123"
  password = ${?POSTGRES_PASSWORD}
  database = "teamflow"
  database = ${?POSTGRES_DATABASE}
  pool-size = 128
  pool-size = ${?POSTGRES_POOL_SIZE}
}

auth {
  user {
    token-key = 3b9438fd0b140eca95d1b204aeb4adc8b2bcfe97d63d5a7321d4e8aa47a0d526
    token-key = ${?ACCESS_TOKEN_SECRET_KEY}
    access-token-expiration = 5.days
    access-token-expiration = ${?JWT_ACCESS_TOKEN_EXPIRATION}
    refresh-token-expiration = 5.days
    refresh-token-expiration = ${?JWT_REFRESH_TOKEN_EXPIRATION}
  }
}

redis {
  uri = "redis://127.0.0.1"
  uri = ${?REDIS_URI}
  prefix = "TEAMFLOW"
}

s-3 {
  access-key = "test"
  access-key = ${?AWS_ACCESS_KEY}
  secret-key = "test"
  secret-key = ${?AWS_SECRET_KEY}
  service-endpoint = "http://localhost:4566"
  service-endpoint = ${?AWS_ENDPOINT}
  signing-region = "us-west-1"
  signing-region = ${?AWS_SIGNING_REGION}
  bucket-name = "s3-bucket/"
  bucket-name = ${?AWS_BUCKET_NAME}
}

jobs {
  enabled = false
  enabled = ${?JOBS_ENABLED}
  jobs = []
  cron-jobs = [
    {
      path = "teamflow.jobs"
      interval = "0 0 7 ? * *"
    }
  ]
  run-on-bootstrap = false
  mode = forever
}

github-token = ${?GITHUB_TOKEN}

groq-key = ${?GROQ_KEY}

telegram-alert {
  enabled = false
  enabled = ${?TELEGRAM_ALERT_ENABLED}
  api-url = "https://api.telegram.org/bot"${?TELEGRAM_ALERT_BOT_TOKEN}
  chat-id = ""
  chat-id = ${?TELEGRAM_ALERT_CHAT_ID}
}