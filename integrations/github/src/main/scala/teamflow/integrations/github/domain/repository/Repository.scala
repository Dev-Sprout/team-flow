package teamflow.integrations.github.domain.repository

import io.circe.generic.extras.ConfiguredJsonCodec
import java.time.ZonedDateTime

@ConfiguredJsonCodec
case class Repository(
    id: Long,
    nodeId: String,
    name: String,
    fullName: String,
    repoPrivate: Boolean,
    owner: RepositoryOwner,
    htmlUrl: String,
    description: Option[String],
    fork: Boolean,
    url: String,
    forksUrl: String,
    keysUrl: String,
    collaboratorsUrl: String,
    teamsUrl: String,
    hooksUrl: String,
    issueEventsUrl: String,
    eventsUrl: String,
    assigneesUrl: String,
    branchesUrl: String,
    tagsUrl: String,
    blobsUrl: String,
    gitTagsUrl: String,
    gitRefsUrl: String,
    treesUrl: String,
    statusesUrl: String,
    languagesUrl: String,
    stargazersUrl: String,
    contributorsUrl: String,
    subscribersUrl: String,
    subscriptionUrl: String,
    commitsUrl: String,
    gitCommitsUrl: String,
    commentsUrl: String,
    issueCommentUrl: String,
    contentsUrl: String,
    compareUrl: String,
    mergesUrl: String,
    archiveUrl: String,
    downloadsUrl: String,
    issuesUrl: String,
    pullsUrl: String,
    milestonesUrl: String,
    notificationsUrl: String,
    labelsUrl: String,
    releasesUrl: String,
    deploymentsUrl: String,
    createdAt: ZonedDateTime,
    updatedAt: ZonedDateTime,
    pushedAt: Option[ZonedDateTime],
    gitUrl: String,
    sshUrl: String,
    cloneUrl: String,
    svnUrl: String,
    homepage: Option[String],
    size: Long,
    stargazersCount: Int,
    watchersCount: Int,
    language: Option[String],
    hasIssues: Boolean,
    hasProjects: Boolean,
    hasWiki: Boolean,
    hasPages: Boolean,
    hasDownloads: Boolean,
    forksCount: Int,
    mirrorUrl: Option[String],
    archived: Boolean,
    disabled: Boolean,
    openIssuesCount: Int,
    license: Option[RepositoryLicense],
    allowForking: Boolean,
    isTemplate: Boolean,
    webCommitSignoffRequired: Boolean,
    topics: List[String],
    visibility: String,
    forks: Int,
    openIssues: Int,
    watchers: Int,
    defaultBranch: String,
    permissions: Option[RepositoryPermissions],
    networkCount: Option[Int],
    subscribersCount: Option[Int]
)

object Repository {
  implicit val configuration: io.circe.generic.extras.Configuration =
    io.circe.generic.extras.Configuration.default.withSnakeCaseMemberNames.withDefaults
}